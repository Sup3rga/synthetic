const class Master{
    private String nom = "Jean";
    private Boolean ok = false;
    
    Master(){
        print "Bonsoir"
    }
    Master(String _nom){
        this.nom = _nom
    }
    // Master(this.nom);
    
    Any sePresenter(){
        print "Hello ! default " + this.nom
    }

    setNom(String noms){
        this.nom = noms
        return this
    }

    private String getFullName(){
        return "Mr. "+ nom
    }

    String getNom() return nom

    String getNom(Boolean cap) return cap ? maj(nom) : nom
    
    Any sePresenter(String prenom){
        print "Hello everyone ! I'm " + nom + " - " + prenom
    }

    Any sePresenter(Boolean cap : false){
        if cap {
            print "Hello, I'm " + maj nom
        }
        else {
            print "Hello, I'm just " + nom
        }
    }
    Any sePresenter(Boolean test : false, Boolean prenom){
        print "Hello !"
    }
    Any sePresenter(Boolean test : false, Boolean prenom, Boolean ok){
        print "Hello second !"
    }
}

Master master = Master("Pierre"),
       mister = Master("Jhon");
    
// master.setNom("Julien")
// master.sePresenter(false,"Ok !", false)
// master.sePresenter(50)
// // master.sePresenter()

// print(master.getNom(),"-",mister.getNom())
// // print master.nom
// // print mister.nom

class Maitre extends Master{
    private static Number total = 0
    
    Maitre(){
        super("Julius")
        print "{Nom} "+ super.nom
        total++
    }
    static cool(){
        print "Je suis cool"
    }
    static test(){
        print "Ceci est une classe ! " + total + " instance" +(total > 1 ? "s" : "")
    }
    croiser(Master e){
        // sePresenter(false)
        print "Je travaille avec " + super.getFullName()
        print "J'agis en tant que " + getNom()
        return this
    }
}

Maitre lens = Maitre(),
       superga = Maitre()
superga.setNom("Superga")
// lens.setNom("Lens")
lens.croiser(superga)
// .test()
Maitre.test()