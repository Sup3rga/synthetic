bien = int("50")
//Appelation
// debug(bien)
presenter(const String nom : "bien", String prenom){
    debug nom + " " + prenom
    if nom == "bien" {
        print "Le nom n'a pas changé"
    }
    else{
        debug "cool"
        print "pas vrai"   
    }     
    if prenom == "inconnu" {
        print "Le prenom n'a pas changé"
    }
}

String setUp(JSON list){
    print list["bien"]
    return ""
}
// _nom = "Jean"
// debug (_nom+" ok", _nom)
// _paul = "Jacques"
// debug _paul
presenter(prenom : "Bonjour")
// presenter "Bonjour"
setUp({
    bien : "Ok"
})

// prenom = "Julien"

String test(
    String nom : (tester){
        return tester + " !!!"
    }
){ 
    String bien = "Ok"
    // nom bien
    // print tk
    return nom "bien"
}

// print test((tk){
//     return "Hello everyone ! " + tk
// })

// fn(String nom){
//     function(ok){
//         print ok + " " + nom
//     }
//     print "Bonsoir " + nom
//     return function
// }

// alias = fn("Bien")

// alias "Synthetic"

// print test "le bonjour"
// print test "le bonsoir"

// String fn(String nom){
//     print "Bonjour " + nom + " !"
//     return "nulsl"
// }

// host(callback,test){
//     callback(test)
//     // print "bien"
// }

// host(fn, "Jacques")
// override test = null
// print test
// 
// String nom = maj tap "Votre nom : "
// String prenom = tap "Votre prenom : "
// Number age = int tap "Votre age : "

// debug "Bonsoir " + prenom + " "+ nom+" ! agé de "+age+" ans";

// if age < 18 {
//     print "Vous êtes donc mineur !"
// }
// elif age <= 50 {
//     debug "Vous êtes jeune et adulte !"
// }
// else{
//     print "Vous êtes donc majeur et vieux !"
// }

String test(String e){
    // print "[Concil] " + e 
    return (){
        print "Bonjour " + e
        JSON<...> test = {
            ok : "word",
            cool: {
                bien : func(){
                    return "Bien"
                }
            }
        };
        // print test;
        return "bien"
    }
}

prime = test "Eric !";
second = test "Jacques";
prime()
second()

print ("[PRIME]", prime)
prime()
second()
// print test var

// print var

JSON<String,String> callbacks = {}

callbacks.bien = test;

print callbacks

String prime(unset callable String bien, String test){
    print test
    print typeof bien;
    return "bien"
}

prime(callbacks.bien, "Ok !")